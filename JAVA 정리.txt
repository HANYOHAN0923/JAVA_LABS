[변수와 자료형 2]


컴퓨터는 0과 1로만 데이터를 저장
1byte = 8bit (bit 컴퓨터가 표현하는 데이터의 최소 단위로 2진수 하나의 값을 저장할 수 있는 메모리의 크기)


0B => 2진수 : num = 0B1010;
0 => 8진수 : num = 012;
0X => 16진수 : num = 0XA;

----------------------------------------------------------------------------------------------------

1) 변수 이름
변수 이름은 알파벳, 숫제, _, $로 구성
대소문자를 구분하며, 숫자로 이름을 시작할 수 없고, 키워드의 이름을 변수의 이름으로 사용할 수 없다
변수의 이름은 변수의 역할에 어울리는 이름을 정해줘야한다.
Camelcase를 사용한다

2) 변수가 저장되는 공간의 특성 - 자료형
변수를 선언 할 때는 변수가 사용할 메모리 크기와 타입을 구분하기 위해 자료형을 사용한다.
아래를 표를 사용하여, 변수가 사용할 공간의 크기와 특성에 따라 자료형을 선택하여 변수를 선언한다.

	정수형	문자형	실수형	논리형
1byte	byte	-	-	boolean
2byte	short	char	-	-
4byte	int	-	float	-
8byte	long	-	double	-

2-1) 정수 자료형
맨 앞의 부호는 부호비트
자료형	바이크크기	수의범위
Byte	1	-2^7~2^7-1
Short	2	-2^15~2^15-1
Int	4	-2^31~2^31-1	
long	8	-2^63~2^63-1

자료형의 수용량보다 변수가 더 크면 오류가 발생.
byte: 동영상, 음악 파일 등 실행 파일의 자료를 처리 할 때 사용하기 좋음
short: 주로 c/c++과 호환시 사용
Int: 자바에서 사용하는 정수에 대한 기본 자료형(가장 많이 사용), 프로그램에서 사용하는 모든 숫자(literal)은 기본적으로 int(4byte)로 저장된다. (리터럴이란 소스 코드의 고정된 값을 대표하는 용어이다) 또한 자바에서 정수에 대해서는 보통 int로 정의한다.
long: 가장 큰 정수 자료형, 숫자 뒤에 L 또는 l을 사용해서 long형임을 표시해야한다. (VariableEx2.java)


2-2) 문자 자료형
컴퓨터에서는 문자도 내부적으로는 비트의 조합으로 표현 (자바에서는 문자를 2byte로 처리)
인코딩 ( 각 문자에 따른 특정한 숫자 값(코드 값)을 부여해서 치환) - 디코딩 (숫자 값을 원래의 문자로 변환)

문자 세트: 문자를 위한 숫자 값(코드 값)들을 정해 놓은 세트 => ASCII(1byte로 영,숫,특수 표현), Unicode(multi byte로 한글 중국어와 같은 복잡한 언어를 표현하기 위한 표준 인코딩, UTF-8, 16이 대표적인데 자바에서는 16을 사용한다.) Unicode는 기본적으로 ASCII를 포함하고 있다. (CharacterEx.java)

2-3) 실수 자료형
부동 소수점 방식: 실수를 지수부와 가수부로 표현함 (무한의 실수를 표현하기 위한 방식)
0.1은 1.0 가수와 10^-1지수의 곱으로 표현을 한다.

double을 ㄱ본적으로 사용한다. float형을 사용할 때는 long과 같은 개념으로 숫자 뒤에 F 식별자를 붙여준다. (DoubleEx.java)

2-4) 논리형
true, false 논리값(참, 거짓)을 표현하는 자료형

2-5) 지역 변수 자료형 추론
자료형 없이 변수 사용하기 (자바 10부터), 변수에 대입되는 값을 보고 컴파일러가 추론한다.

주의 사항1: 한번 타입이 정해지면 바꿀 수 없다. 정수 => 실수 이런식으로 변경이 불가능함.
주의 사항2: 멤버 변수, 스테틱 변수, 전역 변수 등이 있지만 지역 변수({}안에 생성되는 변수)에서만 사용이 가능하다.

--------------------------------------------------------------------------------------------------

[변수와 자료형 3]


1) 상수: 변하지 않는 값, final 키워드를 사용한다. final로 선언된 변수의 값은 바뀔 수 없음
상수는 대문자로 표현을 한다.
Syntax: final 자료형 변수이름 = 값;



2) 리터럴: 프로그램에서 사용하는 모든 숫자, 값, 논리 값
리터럴에 해당되는 값은 특정 메모리 공간인 상수 풀(constant pool)에 있음, 필요한 경우 상수 풀에서 가져와서 사용. 숫자에 대한 식별자 사용되는 이유.
